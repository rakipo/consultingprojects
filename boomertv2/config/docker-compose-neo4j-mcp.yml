services:
  # Neo4j Database
  neo4j:
    image: neo4j:5.15-community
    container_name: neo4j_db
    environment:
      NEO4J_AUTH: neo4j/password123
      NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
      # APOC and GDS Plugin Configuration
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*,gds.*
      NEO4J_dbms_security_allow_csv_import_from_file_urls: true
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4J_apoc_uuid_enabled: true
      NEO4J_apoc_trigger_enabled: true
      NEO4J_apoc_ttl_enabled: true
    ports:
      - "7474:7474"  # Neo4j Browser
      - "7687:7687"  # Bolt protocol
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p password123 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - neo4j-network

  # MCP Neo4j Cypher Server
  mcp-neo4j-cypher:
    image: python:3.11-slim
    container_name: mcp_neo4j_cypher
    working_dir: /app
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
    command: >
      sh -c "
        pip install uv &&
        uvx mcp-neo4j-cypher@latest
      "
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - neo4j-network

  # MCP Neo4j Data Modeling Server
  mcp-neo4j-data-modeling:
    image: python:3.11-slim
    container_name: mcp_neo4j_data_modeling
    working_dir: /app
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
    command: >
      sh -c "
        pip install uv &&
        uvx mcp-neo4j-data-modeling@latest
      "
    depends_on:
      neo4j:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - neo4j-network

  # Custom MCP server for embeddings
  boomer-vector-embedding-creator:
    image: python:3.11-slim
    container_name: boomer_vector_embedding_creator
    working_dir: /app
    volumes:
      - /Users/ravikiranponduri/Desktop/consultingprojects/boomertv2:/app
    command: >
      sh -c "
        pip install --no-cache-dir -r requirements.txt &&
        sleep infinity
      "
    restart: unless-stopped
    networks:
      - neo4j-network

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

networks:
  neo4j-network:
    driver: bridge