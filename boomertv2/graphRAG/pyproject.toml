[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "graphrag-retrieval-agent"
version = "1.0.0"
description = "Minimal GraphRAG retrieval system with Neo4j and MCP support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "GraphRAG Team", email = "team@graphrag.example.com"}
]
maintainers = [
    {name = "GraphRAG Team", email = "team@graphrag.example.com"}
]
keywords = [
    "graphrag",
    "retrieval", 
    "neo4j",
    "embeddings",
    "mcp",
    "knowledge-graph",
    "vector-search",
    "graph-traversal"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.10"
dependencies = [
    "sentence-transformers>=5.1.0",
    "torch>=2.0.0",
    "transformers>=4.41.0",
    "huggingface-hub>=0.20.0",
    "neo4j>=5.28.1",
    "mcp>=1.12.3",
    "anyio>=4.5",
    "httpx>=0.27",
    "httpx-sse>=0.4",
    "jsonschema>=4.20.0",
    "pydantic>=2.8.0,<3.0.0",
    "pydantic-settings>=2.5.2",
    "PyYAML>=6.0",
    "python-dotenv>=1.0.0",
    "typing-extensions>=4.5.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0"
]
logging = [
    "structlog>=23.0.0"
]
all = [
    "graphrag-retrieval-agent[dev,logging]"
]

[project.scripts]
graphrag-cli = "main:main"
graphrag-mcp = "mcp_server:main" 
graphrag-test = "tests.test_runner:main"

[project.urls]
Homepage = "https://github.com/example/graphrag-retrieval-agent"
Repository = "https://github.com/example/graphrag-retrieval-agent"
Documentation = "https://github.com/example/graphrag-retrieval-agent/wiki"
"Bug Reports" = "https://github.com/example/graphrag-retrieval-agent/issues"

[tool.setuptools]
packages = ["modules"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.md"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sentence_transformers.*",
    "neo4j.*",
    "mcp.*"
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox"
]