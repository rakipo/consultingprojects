# Neo4j MCP Configuration & Schema

## MCP Config
```json
{
  "tools": [
    {
      "tool_name": "Neo4j Cypher",
      "tool_type": "cypher", 
      "tool_url": "http://localhost:8080",
      "tool_description": "Neo4j graph database via MCP server"
    }
  ]
}
```

## Graph Schema
```cypher
-- Constraints
CREATE CONSTRAINT article_id FOR (a:Article) REQUIRE a.id IS UNIQUE;
CREATE CONSTRAINT topic_name FOR (t:Topic) REQUIRE t.name IS UNIQUE;
CREATE CONSTRAINT author_name FOR (au:Author) REQUIRE au.name IS UNIQUE;
CREATE CONSTRAINT entity_name FOR (e:Entity) REQUIRE e.name IS UNIQUE;

-- Indexes
CREATE INDEX article_date FOR (a:Article) ON (a.publish_date);
CREATE INDEX article_domain FOR (a:Article) ON (a.domain);
```

## Claude Transformation Prompt
```markdown
Convert article to Neo4j graph format.

INPUT:
{
  "id": "article-001",
  "title": "AI for Aging Populations", 
  "content": "AI is transforming elder care...",
  "tags": ["AI", "Elder Care"],
  "author": "Dr. Susan Lee",
  "publish_date": "2025-07-25",
  "domain": "agingeconomy.com"
}

OUTPUT (JSON only):
{
  "nodes": [
    {
      "label": "Article",
      "properties": {
        "id": "article-001",
        "title": "AI for Aging Populations",
        "publish_date": "2025-07-25", 
        "domain": "agingeconomy.com"
      }
    },
    {
      "label": "Topic", 
      "properties": {"name": "AI"}
    },
    {
      "label": "Author",
      "properties": {"name": "Dr. Susan Lee"}
    },
    {
      "label": "Entity",
      "properties": {"name": "elder care", "type": "concept"}
    }
  ],
  "relationships": [
    {"from": "Article", "to": "Topic", "type": "TAGS"},
    {"from": "Article", "to": "Author", "type": "WRITTEN_BY"},
    {"from": "Article", "to": "Entity", "type": "MENTIONS"}
  ]
}

Extract entities from content. Use exact property names. Return valid JSON only.
```