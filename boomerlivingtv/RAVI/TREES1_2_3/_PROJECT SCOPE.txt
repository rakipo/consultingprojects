PROJECT SCOPE

I'm providing documentation for the PostgreSQL → Neo4j + MCP project with media-specific intelligence modules. Core technical scope remain unchanged.

----

What You're Building:
    - PostgreSQL → Claude entity extraction → Neo4j pipeline
    - MCP Cypher Server for natural language queries
    - Universal Content Intelligence System with 4 media modules
    - Same core deliverables as posted + media-specific query templates

----

Universal Media Intelligence:

Core System (Same as agreed):
    - Universal PostgreSQL schema handling ALL content types
    - Claude AI analysis engine for any media format
    - Neo4j knowledge graph with universal relationships
    - MCP server for natural language business queries

Media Intelligence Modules (questions that must be uncover once graph rag is done):
    - YouTube Intelligence: strategic video content queries
    - Article Intelligence: SEO and blog optimization queries
    - Podcast Intelligence: episode and series planning queries
    - Social Intelligence:  cross-platform social media queries

----

Your Implementation Guide:

Core System:

1. Main spec: 03_execution Tree_neo4j Universal Content Intelligence Engine.txt
2. Database schema: 02_postgresql Schema (read-only input)
3. MCP setup: 00_GET_STARTED.txt Step 5
4. Architecture reference: 01_Content_Intelligence_Platform_Architecture.txt

Media Modules (Ready-to-deploy):

5. YouTube: YouTube_create_nodes.cypher.txt + YouTube_questions_content_intelligence.txt
6. Articles: Article_create_nodes_cypher.txt + Article_questions_content_intelligence.txt
7. Podcasts: Podcast_create_nodes.cypher.txt + Podcast_questions_content_intelligence.txt
8. Social: Social_create_nodes_cypher.txt + Social_questions_content_intelligence.txt

----

Benefits for You:
    - Clearer technical requirements (less guesswork)
    - Universal system for your portfolio (works for any client's content)
    - Production-ready documentation you can reuse
    - 4 specialized modules demonstrating different business intelligence patterns
    - Pre-built strategic queries across all content types
    - Cross-media intelligence capabilities (e.g., "What video topics need articles?")

----

Implementation Notes:
    - Core system deployment: Same as originally scoped
    - Media modules: Pre-built Cypher queries + relationship patterns
    - No additional database work: Universal schema handles all content types
    - MCP integration: Natural language queries work across all media types
    - Modular architecture: Deploy core system + any combination of media modules

----

Same project scope, enhanced with comprehensive media intelligence framework.

Technical Deliverables:

neo4j_graphrag/
├── core_system/
│   ├── create_nodes.cypher           Universal nodes
│   ├── create_relationships.cypher   Universal relationships  
│   ├── query_tests.cypher            Core validation queries
│   ├── ingest_runner.py              PostgreSQL → Neo4j pipeline
│   └── mcp_server_setup.py           Natural language interface
├── media_modules/
│   ├── youtube_intelligence/         Video content queries
│   ├── article_intelligence/         SEO & blog queries
│   ├── podcast_intelligence/         Episode planning queries
│   └── social_intelligence/          Cross-platform queries
├── requirements.txt
└── README.md                         Complete setup guide

----

Result: Universal content intelligence platform with specialized business intelligence for YouTube, Articles, Podcasts, and Social Media - all queryable via natural language through MCP.